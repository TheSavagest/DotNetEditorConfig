root = true

[*]
indent_style = space
indent_size = tab
tab_width = 4
end_of_line = crlf
charset = utf-8-bom
trim_trailing_whitespace = true
insert_final_newline = true
max_line_length = 80 # this property supported by a limited number of editors (https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties)

[*.cs]
######################
# Code quality rules #
######################

### I am too lazy to refactor this properties
dotnet_code_quality.interprocedural_analysis_kind = ContextSensitive
dotnet_code_quality.max_interprocedural_method_call_chain = 3
dotnet_code_quality.max_interprocedural_lambda_or_local_function_call_chain = 3
dotnet_code_quality.dispose_analysis_kind = AllPaths
dotnet_code_quality.dispose_ownership_transfer_at_constructor = true
dotnet_code_quality.dispose_ownership_transfer_at_method_call = false
dotnet_code_quality.points_to_analysis_kind = Complete
dotnet_code_quality.copy_analysis = true
dotnet_code_quality.sufficient_IterationCount_for_weak_KDF_algorithm = 100000

# Design rules
## CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = warning
dotnet_code_quality.CA1000.api_surface = all
## CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = warning
dotnet_code_quality.CA1001.excluded_symbol_names =
dotnet_code_quality.CA1001.excluded_type_names_with_derived_types =
## CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = warning
dotnet_code_quality.CA1002.api_surface = all
## CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = warning
dotnet_code_quality.CA1003.api_surface = all
## CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = warning
dotnet_code_quality.CA1005.api_surface = all
## CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = warning
dotnet_code_quality.CA1008.api_surface = all
dotnet_code_quality.CA1008.additional_enum_none_names =
## CA1010: Generic interface should also be implemented
dotnet_diagnostic.CA1010.severity = warning
dotnet_code_quality.CA1010.api_surface = all
dotnet_code_quality.CA1010.additional_required_generic_interfaces =
## CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = warning
dotnet_code_quality.CA1012.api_surface = all
## CA1014: Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = warning
## CA1016: Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = warning
## CA1017: Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = warning
## CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = warning
## CA1019: Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = warning
## CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = warning
dotnet_code_quality.CA1021.api_surface = all
## CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = warning
dotnet_code_quality.CA1024.api_surface = all
## CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = warning
dotnet_code_quality.CA1027.api_surface = all
## CA1028: Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = warning
dotnet_code_quality.CA1028.api_surface = all
## CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = warning
dotnet_code_quality.CA1030.api_surface = all
## CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = warning
dotnet_code_quality.CA1031.disallowed_symbol_names =
## CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = warning
## CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = warning
## CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = warning
## CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = warning
dotnet_code_quality.CA1036.api_surface = all
## CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = warning
dotnet_code_quality.CA1040.api_surface = all
## CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = warning
dotnet_code_quality.CA1041.api_surface = all
## CA1043: Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = warning
dotnet_code_quality.CA1043.api_surface = all
## CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = warning
dotnet_code_quality.CA1044.api_surface = all
## CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = warning
dotnet_code_quality.CA1045.api_surface = all
## CA1046: Do not overload equality operator on reference types
dotnet_diagnostic.CA1046.severity = warning
dotnet_code_quality.CA1046.api_surface = all
## CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = warning
dotnet_code_quality.CA1047.api_surface = all
## CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = warning
## CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = warning
dotnet_code_quality.CA1051.api_surface = all
dotnet_code_quality.CA1051.exclude_structs = true
## CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = warning
dotnet_code_quality.CA1052.api_surface = all
## CA1053: Static holder types should not have default constructors
### Rule CA1053 only applies to legacy Visual Studio code analysis. In the .NET code-quality analyzers, it's combined into rule CA1052: Static holder types should be Static or NotInheritable.
## CA1054: URI-like parameters should not be strings
dotnet_diagnostic.CA1054.severity = warning
dotnet_code_quality.CA1054.api_surface = all
dotnet_code_quality.CA1054.excluded_symbol_names =
dotnet_code_quality.CA1054.excluded_type_names_with_derived_types =
## CA1055: URI-like return values should not be strings
dotnet_diagnostic.CA1055.severity = warning
dotnet_code_quality.CA1055.api_surface = all
dotnet_code_quality.CA1055.excluded_symbol_names =
dotnet_code_quality.CA1055.excluded_type_names_with_derived_types =
## CA1056: URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = warning
dotnet_code_quality.CA1056.api_surface = all
dotnet_code_quality.CA1056.excluded_symbol_names =
dotnet_code_quality.CA1056.excluded_type_names_with_derived_types =
## CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = warning
dotnet_code_quality.CA1058.api_surface = all
## CA1060: Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = warning
## CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = warning
## CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = warning
dotnet_code_quality.CA1062.api_surface = all
dotnet_code_quality.CA1062.excluded_symbol_names =
dotnet_code_quality.CA1062.excluded_type_names_with_derived_types =
dotnet_code_quality.CA1062.exclude_extension_method_this_parameter = true
dotnet_code_quality.CA1062.null_check_validation_methods =
## CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = warning
dotnet_code_quality.CA1063.api_surface = all
## CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = warning
## CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = warning
## CA1066: Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1066.severity = warning
## CA1067: Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = warning
## CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning
dotnet_code_quality.CA1068.api_surface = all
dotnet_code_quality.CA1068.excluded_symbol_names =
dotnet_code_quality.CA1068.excluded_type_names_with_derived_types =
## CA1069: Enums values should not be duplicated
dotnet_diagnostic.CA1069.severity = warning
## CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = warning
dotnet_code_quality.CA1070.api_surface = all

# Documentation rules
## CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = warning

# Globalization rules
## CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = warning
dotnet_code_quality.CA1303.excluded_symbol_names =
dotnet_code_quality.CA1303.excluded_type_names_with_derived_types =
dotnet_code_quality.CA1303.use_naming_heuristic = true
## CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = warning
dotnet_code_quality.CA1304.excluded_symbol_names =
dotnet_code_quality.CA1304.excluded_type_names_with_derived_types =
## CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = warning
dotnet_code_quality.CA1305.excluded_symbol_names =
dotnet_code_quality.CA1305.excluded_type_names_with_derived_types =
## CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = warning
## CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = warning
## CA1309: Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = warning
## CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = warning
## CA1311: Specify a culture or use an invariant version
dotnet_diagnostic.CA1311.severity = warning
### CA2101: Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = warning

# Portability and interoperability rules
## CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = warning
## CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = warning
dotnet_code_quality.enable_platform_analyzer_on_pre_net5_target = true
## CA1417: Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = warning
## CA1418: Use valid platform string
dotnet_diagnostic.CA1418.severity = warning
## CA1419: Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1419.severity = warning
## CA1420: Property, type, or attribute requires runtime marshalling
dotnet_diagnostic.CA1420.severity = warning
## CA1421: This method uses runtime marshalling even when the 'DisableRuntimeMarshallingAttribute' is applied
dotnet_diagnostic.CA1421.severity = warning
## CA1422: Validate platform compatibility
dotnet_diagnostic.CA1422.severity = warning

# Maintainability rules
## CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = warning
dotnet_code_quality.CA1501.additional_inheritance_excluded_symbol_names =
## CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = warning
## CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = warning
## CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = warning
## CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = warning
## CA1508: Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = warning
dotnet_code_quality.CA1508.excluded_symbol_names =
dotnet_code_quality.CA1508.excluded_type_names_with_derived_types =
## CA1509: Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = warning
## CA1510: Use ArgumentNullException throw helper
dotnet_diagnostic.CA1510.severity = warning
## CA1511: Use ArgumentException throw helper
dotnet_diagnostic.CA1511.severity = warning
## CA1512: Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.CA1512.severity = warning
## CA1513: Use ObjectDisposedException throw helper
dotnet_diagnostic.CA1513.severity = warning
## CA1514: Avoid redundant length argument
dotnet_diagnostic.CA1514.severity = warning
## CA1515: Consider making public types internal
dotnet_diagnostic.CA1515.severity = warning
dotnet_code_quality.CA1515.output_kind = ConsoleApplication, DynamicallyLinkedLibrary, NetModule, WindowsApplication, WindowsRuntimeApplication, WindowsRuntimeMetadata

# Naming rules
## CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = warning
dotnet_code_quality.CA1700.api_surface = all
## CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = warning
dotnet_code_quality.CA1707.api_surface = all
## CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = warning
dotnet_code_quality.CA1708.api_surface = all
## CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = warning
dotnet_code_quality.CA1710.api_surface = all
dotnet_code_quality.CA1710.exclude_indirect_base_types = false
dotnet_code_quality.CA1710.additional_required_suffixes =
## CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = warning
dotnet_code_quality.CA1711.api_surface = all
dotnet_code_quality.ca1711.allowed_suffixes =
## CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = warning
dotnet_code_quality.CA1712.enum_values_prefix_trigger = AnyEnumValue
## CA1713: Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = warning
## CA1714: Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = warning
dotnet_code_quality.CA1714.api_surface = all
## CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = warning
dotnet_code_quality.CA1715.api_surface = all
dotnet_code_quality.CA1715.exclude_single_letter_type_parameters = true
## CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = warning
dotnet_code_quality.CA1716.api_surface = all
dotnet_code_quality.CA1716.analyzed_symbol_kinds = Namespace, NamedType, Method, Property, Event, Parameter
## CA1717: Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1717.severity = warning
dotnet_code_quality.CA1717.api_surface = all
## CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = warning
dotnet_code_quality.CA1720.api_surface = all
## CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = warning
dotnet_code_quality.CA1721.api_surface = all
## CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = warning
## CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = warning
dotnet_code_quality.CA1725.api_surface = all
## CA1727: Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = warning

# Performance rules
### CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = warning
dotnet_code_quality.CA1802.api_surface = all
dotnet_code_quality.CA1802.required_modifiers = none
### CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = warning
### CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = warning
dotnet_code_quality.CA1806.additional_use_results_methods =
### CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = warning
### CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = warning
dotnet_code_quality.CA1812.ignore_internalsvisibleto = true
### CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = warning
### CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = warning
### CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = warning
dotnet_code_quality.CA1815.api_surface = all
### CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = warning
dotnet_code_quality.CA1819.api_surface = all
### CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = warning
### CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning
### CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = warning
dotnet_code_quality.CA1822.api_surface = all
### CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning
### CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = warning
### CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning
### CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = warning
dotnet_code_quality.CA1826.exclude_ordefault_methods = true
### CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning
### CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning
### CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning
### CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = warning
### CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = warning
### CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = warning
### CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = warning
### CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = warning
### CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = warning
### CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning
### CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = warning
### CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = warning
### CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1839.severity = warning
### CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = warning
### CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = warning
### CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = warning
### CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = warning
### CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = warning
### CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = warning
### CA1846: Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity = warning
### CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = warning
### CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = warning
### CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = warning
### CA1850: Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.CA1850.severity = warning
### CA1851: Possible multiple enumerations of 'IEnumerable' collection
dotnet_diagnostic.CA1851.severity = warning
dotnet_code_quality.CA1851.enumeration_methods =
dotnet_code_quality.CA1851.linq_chain_methods =
dotnet_code_quality.CA1851.assume_method_enumerates_parameters = true
### CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = warning
dotnet_code_quality.CA1852.ignore_internalsvisibleto = true
### CA1853: Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1853.severity = warning
### CA1854: Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1854.severity = warning
### CA1855: Prefer 'Clear' over 'Fill'
dotnet_diagnostic.CA1855.severity = warning
### CA1856: Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.CA1856.severity = warning
### CA1857: A constant is expected for the parameter
dotnet_diagnostic.CA1857.severity = warning
### CA1858: Use 'StartsWith' instead of 'IndexOf'
dotnet_diagnostic.CA1858.severity = warning
### CA1859: Use concrete types when possible for improved performance
dotnet_diagnostic.CA1859.severity = warning
dotnet_code_quality.CA1859.api_surface = all
### CA1860: Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.CA1860.severity = warning
### CA1861: Avoid constant arrays as arguments
dotnet_diagnostic.CA1861.severity = warning
### CA1862: Use the 'StringComparison' method overloads to perform case-insensitive string comparisons
dotnet_diagnostic.CA1862.severity = warning
### CA1863: Use 'CompositeFormat'
dotnet_diagnostic.CA1863.severity = warning
### CA1864: Prefer the 'IDictionary.TryAdd(TKey, TValue)' method
dotnet_diagnostic.CA1864.severity = warning
### CA1865-CA1867: Use 'string.Method(char)' instead of 'string.Method(string)' for string with single char
dotnet_diagnostic.CA1865.severity = warning
dotnet_diagnostic.CA1866.severity = warning
dotnet_diagnostic.CA1867.severity = warning
### CA1868: Unnecessary call to 'Contains(item)'
dotnet_diagnostic.CA1868.severity = warning
### CA1869: Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.CA1869.severity = warning
### CA1870: Use a cached 'SearchValues' instance
dotnet_diagnostic.CA1870.severity = warning
### CA1871: Do not pass a nullable struct to 'ArgumentNullException.ThrowIfNull'
dotnet_diagnostic.CA1871.severity = warning
### CA1872: Prefer 'Convert.ToHexString' and 'Convert.ToHexStringLower' over call chains based on 'BitConverter.ToString'
dotnet_diagnostic.CA1872.severity = warning

# SingleFile rules
## IL3000: Avoid accessing Assembly file path when publishing as a single file
dotnet_diagnostic.IL3000.severity = warning
## IL3001: Avoid accessing Assembly file path when publishing as a single file
dotnet_diagnostic.IL3001.severity = warning
## IL3002: Avoid calling members annotated with 'RequiresAssemblyFilesAttribute' when publishing as a single file
dotnet_diagnostic.IL3002.severity = warning
## IL3003: 'RequiresAssemblyFilesAttribute' annotations must match across all interface implementations or overrides
dotnet_diagnostic.IL3003.severity = warning

# Reliability rules
## CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = warning
dotnet_code_quality.CA2000.excluded_symbol_names =
dotnet_code_quality.CA2000.excluded_type_names_with_derived_types =
## CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = warning
## CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = warning
dotnet_code_quality.CA2007.exclude_async_void_methods = false
### Deprecated. Package version 2.6.3 and earlier
### dotnet_code_quality.CA2007.skip_async_void_methods = false
dotnet_code_quality.CA2007.output_kind = ConsoleApplication, DynamicallyLinkedLibrary, NetModule, WindowsApplication, WindowsRuntimeApplication, WindowsRuntimeMetadata
## CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = warning
## CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning
## CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = warning
## CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = warning
## CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning
## CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning
## CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning
## CA2016: Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = warning
## CA2017: Parameter count mismatch
dotnet_diagnostic.CA2017.severity = warning
## CA2018: 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.CA2018.severity = warning
## CA2019: Improper 'ThreadStatic' field initialization
dotnet_diagnostic.CA2019.severity = warning
## CA2020: Prevent behavioral change
dotnet_diagnostic.CA2020.severity = warning
## CA2021: Do not call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types
dotnet_diagnostic.CA2021.severity = warning

# Security rules
## CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = warning
dotnet_code_quality.CA2100.excluded_symbol_names =
dotnet_code_quality.CA2100.excluded_type_names_with_derived_types =
## CA2109: Review visible event handlers
### Deleted in 8.0 release
### dotnet_diagnostic.CA2109.severity = warning
## CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = warning
## CA2153: Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = warning
## CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = warning
## CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = warning
dotnet_code_quality.CA2301.excluded_symbol_names =
dotnet_code_quality.CA2301.excluded_type_names_with_derived_types =
## CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = warning
dotnet_code_quality.CA2302.excluded_symbol_names =
dotnet_code_quality.CA2302.excluded_type_names_with_derived_types =
## CA2305: Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = warning
## CA2310: Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = warning
## CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = warning
dotnet_code_quality.CA2311.excluded_symbol_names =
dotnet_code_quality.CA2311.excluded_type_names_with_derived_types =
## CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = warning
dotnet_code_quality.CA2312.excluded_symbol_names =
dotnet_code_quality.CA2312.excluded_type_names_with_derived_types =
## CA2315: Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = warning
## CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = warning
dotnet_code_quality.CA2321.excluded_symbol_names =
dotnet_code_quality.CA2321.excluded_type_names_with_derived_types =
## CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = warning
dotnet_code_quality.CA2322.excluded_symbol_names =
dotnet_code_quality.CA2322.excluded_type_names_with_derived_types =
## CA2326: Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = warning
## CA2327: Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = warning
dotnet_code_quality.CA2327.excluded_symbol_names =
dotnet_code_quality.CA2327.excluded_type_names_with_derived_types =
## CA2328: Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = warning
dotnet_code_quality.CA2328.excluded_symbol_names =
dotnet_code_quality.CA2328.excluded_type_names_with_derived_types =
## CA2329: Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = warning
dotnet_code_quality.CA2329.excluded_symbol_names =
dotnet_code_quality.CA2329.excluded_type_names_with_derived_types =
## CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = warning
dotnet_code_quality.CA2330.excluded_symbol_names =
dotnet_code_quality.CA2330.excluded_type_names_with_derived_types =
## CA2350: Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2350.severity = warning
## CA2351: Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = warning
## CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = warning
## CA2353: Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = warning
## CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2354.severity = warning
## CA2355: Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2355.severity = warning
## CA2356: Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2356.severity = warning
## CA2361: Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = warning
## CA2362: Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = warning
## CA3001: Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = warning
dotnet_code_quality.CA3001.excluded_symbol_names =
dotnet_code_quality.CA3001.excluded_type_names_with_derived_types =
## CA3002: Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = warning
dotnet_code_quality.CA3002.excluded_symbol_names =
dotnet_code_quality.CA3002.excluded_type_names_with_derived_types =
## CA3003: Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = warning
dotnet_code_quality.CA3003.excluded_symbol_names =
dotnet_code_quality.CA3003.excluded_type_names_with_derived_types =
## CA3004: Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = warning
dotnet_code_quality.CA3004.excluded_symbol_names =
dotnet_code_quality.CA3004.excluded_type_names_with_derived_types =
## CA3005: Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = warning
dotnet_code_quality.CA3005.excluded_symbol_names =
dotnet_code_quality.CA3005.excluded_type_names_with_derived_types =
## CA3006: Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = warning
dotnet_code_quality.CA3006.excluded_symbol_names =
dotnet_code_quality.CA3006.excluded_type_names_with_derived_types =
## CA3007: Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = warning
dotnet_code_quality.CA3007.excluded_symbol_names =
dotnet_code_quality.CA3007.excluded_type_names_with_derived_types =
## CA3008: Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = warning
dotnet_code_quality.CA3008.excluded_symbol_names =
dotnet_code_quality.CA3008.excluded_type_names_with_derived_types =
## CA3009: Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = warning
dotnet_code_quality.CA3009.excluded_symbol_names =
dotnet_code_quality.CA3009.excluded_type_names_with_derived_types =
## CA3010: Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = warning
dotnet_code_quality.CA3010.excluded_symbol_names =
dotnet_code_quality.CA3010.excluded_type_names_with_derived_types =
## CA3011: Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = warning
dotnet_code_quality.CA3011.excluded_symbol_names =
dotnet_code_quality.CA3011.excluded_type_names_with_derived_types =
## CA3012: Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = warning
dotnet_code_quality.CA3012.excluded_symbol_names =
dotnet_code_quality.CA3012.excluded_type_names_with_derived_types =
## CA3061: Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = warning
## CA3075: Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = warning
## CA3076: Insecure XSLT script processing
dotnet_diagnostic.CA3076.severity = warning
## CA3077: Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = warning
## CA3147: Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = warning
## CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = warning
## CA5351: Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning
## CA5358: Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5358.severity = warning
## CA5359: Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = warning
## CA5360: Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = warning
## CA5361: Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = warning
dotnet_code_quality.CA5361.excluded_symbol_names =
dotnet_code_quality.CA5361.excluded_type_names_with_derived_types =
## CA5362: Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = warning
## CA5363: Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = warning
## CA5364: Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = warning
## CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = warning
## CA5366: Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.CA5366.severity = warning
## CA5367: Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = warning
## CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = warning
## CA5369: Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.CA5369.severity = warning
## CA5370: Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5370.severity = warning
## CA5371: Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.CA5371.severity = warning
## CA5372: Use XmlReader for XPathDocument constructor
dotnet_diagnostic.CA5372.severity = warning
## CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = warning
## CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = warning
## CA5375: Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = warning
## CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = warning
dotnet_code_quality.CA5376.excluded_symbol_names =
dotnet_code_quality.CA5376.excluded_type_names_with_derived_types =
## CA5377: Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = warning
dotnet_code_quality.CA5377.excluded_symbol_names =
dotnet_code_quality.CA5377.excluded_type_names_with_derived_types =
## CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = warning
dotnet_code_quality.CA5378.excluded_symbol_names =
dotnet_code_quality.CA5378.excluded_type_names_with_derived_types =
## CA5379: Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5379.severity = warning
## CA5380: Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = warning
dotnet_code_quality.CA5380.excluded_symbol_names =
dotnet_code_quality.CA5380.excluded_type_names_with_derived_types =
## CA5381: Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = warning
dotnet_code_quality.CA5381.excluded_symbol_names =
dotnet_code_quality.CA5381.excluded_type_names_with_derived_types =
## CA5382: Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5382.severity = warning
dotnet_code_quality.CA5382.excluded_symbol_names =
dotnet_code_quality.CA5382.excluded_type_names_with_derived_types =
## CA5383: Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5383.severity = warning
dotnet_code_quality.CA5383.excluded_symbol_names =
dotnet_code_quality.CA5383.excluded_type_names_with_derived_types =
## CA5384: Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = warning
dotnet_code_quality.CA5384.excluded_symbol_names =
dotnet_code_quality.CA5384.excluded_type_names_with_derived_types =
## CA5385: Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = warning
## CA5386: Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = warning
## CA5387: Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = warning
dotnet_code_quality.CA5387.excluded_symbol_names =
dotnet_code_quality.CA5387.excluded_type_names_with_derived_types =
## CA5388: Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = warning
dotnet_code_quality.CA5388.excluded_symbol_names =
dotnet_code_quality.CA5388.excluded_type_names_with_derived_types =
## CA5389: Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = warning
dotnet_code_quality.CA5389.excluded_symbol_names =
dotnet_code_quality.CA5389.excluded_type_names_with_derived_types =
## CA5390: Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = warning
dotnet_code_quality.CA5390.excluded_symbol_names =
dotnet_code_quality.CA5390.excluded_type_names_with_derived_types =
## CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = warning
dotnet_code_quality.CA5391.exclude_aspnet_core_mvc_controllerbase = false
## CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = warning
## CA5393: Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = warning
dotnet_code_quality.CA5393.unsafe_DllImportSearchPath_bits = 770
## CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = warning
## CA5395: Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = warning
## CA5396: Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = warning
## CA5397: Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = warning
## CA5398: Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = warning
## CA5399: HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = warning
dotnet_code_quality.CA5399.excluded_symbol_names =
dotnet_code_quality.CA5399.excluded_type_names_with_derived_types =
## CA5400: Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = warning
dotnet_code_quality.CA5400.excluded_symbol_names =
dotnet_code_quality.CA5400.excluded_type_names_with_derived_types =
## CA5401: Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = warning
## CA5402: Use CreateEncryptor with the default IV 
dotnet_diagnostic.CA5402.severity = warning
## CA5403: Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = warning
## CA5404: Do not disable token validation checks
dotnet_diagnostic.CA5404.severity = warning
## CA5405: Do not always skip token validation in delegates
dotnet_diagnostic.CA5405.severity = warning

# Usage rules
## CA1801: Review unused parameters
### Deleted in 6.0 release
### dotnet_diagnostic.CA1801.severity = warning
### dotnet_code_quality.CA1801.api_surface = all
## CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = warning
## CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning
## CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = warning
## CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = warning
## CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning
dotnet_code_quality.CA2208.api_surface = all
## CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = warning
## CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = warning
## CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = warning
## CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = warning
## CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = warning
## CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = warning
dotnet_code_quality.CA2217.api_surface = all
## CA2218: Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = warning
## CA2219: Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = warning
## CA2224: Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = warning
## CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = warning
dotnet_code_quality.CA2225.api_surface = all
## CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = warning
dotnet_code_quality.CA2226.api_surface = all
## CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = warning
## CA2229: Implement serialization constructors
### Deleted in 8.0 release
### dotnet_diagnostic.CA2229.severity = warning
## CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = warning
dotnet_code_quality.CA2231.api_surface = all
## CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = warning
dotnet_code_quality.CA2234.api_surface = all
## CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = warning
## CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = warning
## CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = warning
dotnet_code_quality.CA2241.additional_string_formatting_methods =
dotnet_code_quality.CA2241.try_determine_additional_string_formatting_methods_automatically = true
## CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = warning
## CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = warning
## CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = warning
## CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = warning
## CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = warning
## CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning
## CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = warning
## CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = warning
## CA2250: Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2250.severity = warning
## CA2251: Use 'string.Equals'
dotnet_diagnostic.CA2251.severity = warning
## CA2252: This API requires opting into preview features
dotnet_diagnostic.CA2252.severity = warning
## CA2253: Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = warning
## CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = warning
## CA2255: The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = warning
## CA2256: All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2256.severity = warning
## CA2257: Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2257.severity = warning
## CA2258: Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2258.severity = warning
## CA2259: 'ThreadStatic' only affects static fields
dotnet_diagnostic.CA2259.severity = warning
## CA2260: Use correct type parameter
dotnet_diagnostic.CA2260.severity = warning
## CA2261: Do not use ConfigureAwaitOptions.SuppressThrowing with Task<TResult>
dotnet_diagnostic.CA2261.severity = warning
## CA2262: Set 'MaxResponseHeadersLength' properly
dotnet_diagnostic.CA2262.severity = warning
## CA2263: Prefer generic overload when type is known
dotnet_diagnostic.CA2263.severity = warning
## CA2264: Do not pass a non-nullable value to 'ArgumentNullException.ThrowIfNull'
dotnet_diagnostic.CA2264.severity = warning

####################
# Code-style rules #
####################

# Language and unnecessary rules
## Simplify name (IDE0001)
dotnet_diagnostic.IDE0001.severity = none
## Simplify member access (IDE0002)
dotnet_diagnostic.IDE0002.severity = none
## this and Me preferences (IDE0003 and IDE0009)
dotnet_diagnostic.IDE0003.severity = none
dotnet_diagnostic.IDE0009.severity = none
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false
## Remove unnecessary cast (IDE0004)
dotnet_diagnostic.IDE0004.severity = none
## Remove unnecessary using directives (IDE0005)
dotnet_diagnostic.IDE0005.severity = none
## 'var' preferences (IDE0007 and IDE0008)
dotnet_diagnostic.IDE0007.severity = none
dotnet_diagnostic.IDE0008.severity = none
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true
## Add missing cases to switch statement (IDE0010)
dotnet_diagnostic.IDE0010.severity = none
## Add braces (IDE0011)
tnet_diagnostic.IDE0011.severity = none
csharp_prefer_braces = true
## Use throw expression (IDE0016)
dotnet_diagnostic.IDE0016.severity = none
csharp_style_throw_expression = true
## Use object initializers (IDE0017)
dotnet_diagnostic.IDE0017.severity = none
dotnet_style_object_initializer = true
## Inline variable declaration (IDE0018)
dotnet_diagnostic.IDE0018.severity = none
csharp_style_inlined_variable_declaration = true
## Use pattern matching to avoid 'as' followed by a 'null' check (IDE0019)
dotnet_diagnostic.IDE0019.severity = none
csharp_style_pattern_matching_over_as_with_null_check = true
## Use pattern matching to avoid 'is' check followed by a cast (IDE0020 and IDE0038)
dotnet_diagnostic.IDE0020.severity = none
dotnet_diagnostic.IDE0038.severity = none
csharp_style_pattern_matching_over_is_with_cast_check = true
## Use expression body for constructors (IDE0021)
dotnet_diagnostic.IDE0021.severity = none
csharp_style_expression_bodied_constructors = when_on_single_line
## Use expression body for methods (IDE0022)
dotnet_diagnostic.IDE0022.severity = none
csharp_style_expression_bodied_methods = when_on_single_line
## Use expression body for operators (IDE0023 and IDE0024)
dotnet_diagnostic.IDE0023.severity = none
dotnet_diagnostic.IDE0024.severity = none
csharp_style_expression_bodied_operators = when_on_single_line
## Use expression body for properties (IDE0025)
dotnet_diagnostic.IDE0025.severity = none
csharp_style_expression_bodied_properties = when_on_single_line
## Use expression body for indexers (IDE0026)
dotnet_diagnostic.IDE0026.severity = none
csharp_style_expression_bodied_indexers = when_on_single_line
## Use expression body for accessors (IDE0027)
dotnet_diagnostic.IDE0027.severity = none
csharp_style_expression_bodied_accessors = when_on_single_line
## Use collection initializers or expressions (IDE0028)
dotnet_diagnostic.IDE0028.severity = none
dotnet_style_prefer_collection_expression = true
dotnet_style_collection_initializer = true
## Null check can be simplified (IDE0029, IDE0030, and IDE0270)
dotnet_diagnostic.IDE0029.severity = none
dotnet_diagnostic.IDE0030.severity = none
dotnet_diagnostic.IDE0270.severity = none
dotnet_style_coalesce_expression = true
## Use null propagation (IDE0031)
dotnet_diagnostic.IDE0031.severity = none
dotnet_style_null_propagation = true
## Use auto-implemented property (IDE0032)
dotnet_diagnostic.IDE0032.severity = none
dotnet_style_prefer_auto_properties = true
## Use explicitly provided tuple name (IDE0033)
dotnet_diagnostic.IDE0033.severity = none
dotnet_style_explicit_tuple_names = true
## Simplify 'default' expression (IDE0034)
dotnet_diagnostic.IDE0034.severity = none
csharp_prefer_simple_default_expression = true
## Remove unreachable code (IDE0035)
dotnet_diagnostic.IDE0035.severity = none
## Order modifiers (IDE0036)
dotnet_diagnostic.IDE0036.severity = none
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async
## Use inferred member names (IDE0037)
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_diagnostic.IDE0037.severity = none
## Use local function instead of lambda (IDE0039)
dotnet_diagnostic.IDE0039.severity = none
csharp_style_prefer_local_over_anonymous_function = true
## Add accessibility modifiers (IDE0040)
dotnet_diagnostic.IDE0040.severity = none
dotnet_style_require_accessibility_modifiers = always
## Use 'is null' check (IDE0041)
dotnet_diagnostic.IDE0041.severity = none
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
## Deconstruct variable declaration (IDE0042)
dotnet_diagnostic.IDE0042.severity = none
csharp_style_deconstructed_variable_declaration = true
## Add readonly modifier (IDE0044)
dotnet_diagnostic.IDE0044.severity = none
dotnet_style_readonly_field = true
## Use conditional expression for assignment (IDE0045)
dotnet_diagnostic.IDE0045.severity = none
dotnet_style_prefer_conditional_expression_over_assignment = true
## Use conditional expression for return (IDE0046)
dotnet_diagnostic.IDE0046.severity = none
dotnet_style_prefer_conditional_expression_over_return = true
## Parentheses preferences (IDE0047 and IDE0048)
dotnet_diagnostic.IDE0047.severity = none
dotnet_diagnostic.IDE0048.severity = none
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
## Use language keywords instead of framework type names for type references (IDE0049)
dotnet_diagnostic.IDE0049.severity = none
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true
## Convert anonymous type to tuple (IDE0050)
dotnet_diagnostic.IDE0050.severity = none
## Remove unused private member (IDE0051)
dotnet_diagnostic.IDE0051.severity = none
## Remove unread private member (IDE0052)
dotnet_diagnostic.IDE0052.severity = none
## Use expression body for lambdas (IDE0053)
dotnet_diagnostic.IDE0053.severity = none
csharp_style_expression_bodied_lambdas = true
## Use compound assignment (IDE0054 and IDE0074)
dotnet_diagnostic.IDE0054.severity = none
dotnet_diagnostic.IDE0074.severity = none
dotnet_style_prefer_compound_assignment = true
## Use index operator (IDE0056)
dotnet_diagnostic.IDE0056.severity = none
csharp_style_prefer_index_operator = true
## Use range operator (IDE0057)
dotnet_diagnostic.IDE0057.severity = none
csharp_style_prefer_range_operator = true
## Remove unnecessary expression value (IDE0058)
dotnet_diagnostic.IDE0058.severity = none
csharp_style_unused_value_expression_statement_preference = discard_variable
## Remove unnecessary value assignment (IDE0059)
dotnet_diagnostic.IDE0059.severity = none
csharp_style_unused_value_assignment_preference = discard_variable
## Remove unused parameter (IDE0060)
dotnet_diagnostic.IDE0060.severity = none
dotnet_code_quality_unused_parameters = all
## Use expression body for local functions (IDE0061)
dotnet_diagnostic.IDE0061.severity = none
csharp_style_expression_bodied_local_functions = when_on_single_line
## Make local function static (IDE0062)
dotnet_diagnostic.IDE0062.severity = none
csharp_prefer_static_local_function = true
## Use simple 'using' statement (IDE0063)
dotnet_diagnostic.IDE0063.severity = none
csharp_prefer_simple_using_statement = true
## Make struct fields writable (IDE0064)
dotnet_diagnostic.IDE0064.severity = none
## 'using' directive placement (IDE0065)
dotnet_diagnostic.IDE0065.severity = none
csharp_using_directive_placement = inside_namespace
## Use switch expression (IDE0066)
dotnet_diagnostic.IDE0066.severity = none
csharp_style_prefer_switch_expression = true
## Use 'System.HashCode.Combine' (IDE0070)
dotnet_diagnostic.IDE0070.severity = none
## Simplify interpolation (IDE0071)
dotnet_diagnostic.IDE0071.severity = none
dotnet_style_prefer_simplified_interpolation = true
## Add missing cases to switch expression (IDE0072)
dotnet_diagnostic.IDE0072.severity = none
## Require file header (IDE0073)
dotnet_diagnostic.IDE0073.severity = none
file_header_template = unset
## Simplify conditional expression (IDE0075)
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_diagnostic.IDE0075.severity = none
## Use pattern matching (IDE0078 and IDE0260)
dotnet_diagnostic.IDE0078.severity = none
dotnet_diagnostic.IDE0260.severity = none
csharp_style_prefer_pattern_matching = true
csharp_style_pattern_matching_over_as_with_null_check = true
## Remove unnecessary suppression (IDE0079)
dotnet_diagnostic.IDE0079.severity = none
dotnet_remove_unnecessary_suppression_exclusions = none
## Remove unnecessary suppression operator (IDE0080)
dotnet_diagnostic.IDE0080.severity = none
## Remove 'ByVal' (IDE0081)
dotnet_diagnostic.IDE0081.severity = none
## Convert 'typeof' to 'nameof' (IDE0082)
dotnet_diagnostic.IDE0082.severity = none
## Use pattern matching (not operator) (IDE0083)
dotnet_diagnostic.IDE0083.severity = none
csharp_style_prefer_not_pattern = true
## Simplify 'new' expression (IDE0090)
dotnet_diagnostic.IDE0090.severity = none
csharp_style_implicit_object_creation_when_type_is_apparent = true
## Remove unnecessary equality operator (IDE0100)
dotnet_diagnostic.IDE0100.severity = none
## Remove unnecessary discard (IDE0110)
dotnet_diagnostic.IDE0110.severity = none
## Simplify LINQ expression (IDE0120)
dotnet_diagnostic.IDE0120.severity = none
## Namespace does not match folder structure (IDE0130)
dotnet_diagnostic.IDE0130.severity = none
dotnet_style_namespace_match_folder = true
## Prefer 'null' check over type check (IDE0150)
dotnet_diagnostic.IDE0150.severity = none
csharp_style_prefer_null_check_over_type_check = true
## Namespace declaration preferences (IDE0160 and IDE0161)
dotnet_diagnostic.IDE0160.severity = none
dotnet_diagnostic.IDE0161.severity = none
csharp_style_namespace_declarations = file_scoped
## Simplify property pattern (IDE0170)
dotnet_diagnostic.IDE0170.severity = none
csharp_style_prefer_extended_property_pattern = true
## Use tuple to swap values (IDE0180)
dotnet_diagnostic.IDE0180.severity = none
csharp_style_prefer_tuple_swap = true
## Remove unnecessary lambda expression (IDE0200)
dotnet_diagnostic.IDE0200.severity = none
csharp_style_prefer_method_group_conversion = true
## Convert to top-level statements (IDE0210)
dotnet_diagnostic.IDE0210.severity = none
csharp_style_prefer_top_level_statements = false
## Convert to 'Program.Main' style program (IDE0211)
dotnet_diagnostic.IDE0211.severity = none
csharp_style_prefer_top_level_statements = false
## Add explicit cast in foreach loop (IDE0220)
dotnet_diagnostic.IDE0220.severity = none
dotnet_style_prefer_foreach_explicit_cast_in_source = always
## Use UTF-8 string literal (IDE0230)
dotnet_diagnostic.IDE0230.severity = none
csharp_style_prefer_utf8_string_literals = true
## Nullable directive is redundant (IDE0240)
dotnet_diagnostic.IDE0240.severity = none
## Nullable directive is unnecessary (IDE0241)
dotnet_diagnostic.IDE0241.severity = none
## Struct can be made 'readonly' (IDE0250)
dotnet_diagnostic.IDE0250.severity = none
csharp_style_prefer_readonly_struct = true
## Member can be made 'readonly' (IDE0251)
dotnet_diagnostic.IDE0251.severity = none
csharp_style_prefer_readonly_struct_member = true
## Use 'nameof' (IDE0280)
dotnet_diagnostic.IDE0280.severity = none
## Use primary constructor (IDE0290)
dotnet_diagnostic.IDE0290.severity = none
csharp_style_prefer_primary_constructors = true
## Use collection expression for array (IDE0300)
dotnet_diagnostic.IDE0300.severity = none
dotnet_style_prefer_collection_expression = when_types_loosely_match
## Use collection expression for empty (IDE0301)
dotnet_diagnostic.IDE0301.severity = none
## Use collection expression for stackalloc (IDE0302)
dotnet_diagnostic.IDE0302.severity = none
## Use collection expression for 'Create()' (IDE0303)
dotnet_diagnostic.IDE0303.severity = none
## Use collection expression for builder (IDE0304)
dotnet_diagnostic.IDE0304.severity = none
## Use collection expression for fluent (IDE0305)
dotnet_diagnostic.IDE0305.severity = none
## Use conditional delegate call (IDE1005)
dotnet_diagnostic.IDE1005.severity = none
csharp_style_conditional_delegate_call = true

# Miscellaneous rules
## Remove invalid global 'SuppressMessageAttribute' (IDE0076)
dotnet_diagnostic.IDE0076.severity = none
## Avoid legacy format target in global 'SuppressMessageAttribute' (IDE0077)
dotnet_diagnostic.IDE0077.severity = none

# Formatting rule (IDE0055)
dotnet_diagnostic.IDE0055.severity = none
## .NET formatting options
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
## C# formatting options
### New-line options
csharp_new_line_before_open_brace = methods, properties, control_blocks, types # accessors, anonymous_methods, anonymous_types, control_blocks, events, indexers, lambdas, local_functions, methods, object_collection_array_initializers, properties, types
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
### Indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false
### Spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false # control_flow_statements, expressions, type_casts
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
### Wrap options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

################
# Naming rules #
################

# Just use VS UI to define naming rules =)
